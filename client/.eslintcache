[{"C:\\Users\\mehar\\github\\3-project\\client\\src\\index.js":"1","C:\\Users\\mehar\\github\\3-project\\client\\src\\App.js":"2","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Timesheet\\Timesheet.js":"3","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\ReactDND.js":"4","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\initial-data.js":"5","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\column.js":"6","C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\contexts\\UpdateToDoContext.js":"7","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\task.js":"8","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\NewTaskAddBox\\NewTaskAddBox.js":"9","C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\apis\\API.js":"10","C:\\Users\\mehar\\github\\3-project\\client\\src\\Auth.js":"11","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Landing\\Landing.js":"12","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Navbar\\Navbar.js":"13","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Login\\login.js":"14","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Register\\register.js":"15","C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\apis\\userFunctions.js":"16","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Tasks\\Tasks.js":"17","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Admin\\Admin.js":"18","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\Team.js":"19","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\engagementPDF.js":"20","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\TableHead.js":"21","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Timesheet\\TableHead.js":"22"},{"size":351,"mtime":1613022855922,"results":"23","hashOfConfig":"24"},{"size":5977,"mtime":1615433176582,"results":"25","hashOfConfig":"24"},{"size":13633,"mtime":1615429348770,"results":"26","hashOfConfig":"24"},{"size":16608,"mtime":1615563496367,"results":"27","hashOfConfig":"24"},{"size":833,"mtime":1613650809349,"results":"28","hashOfConfig":"24"},{"size":3457,"mtime":1615563793501,"results":"29","hashOfConfig":"24"},{"size":115,"mtime":1611294788240,"results":"30","hashOfConfig":"24"},{"size":7108,"mtime":1613313871683,"results":"31","hashOfConfig":"24"},{"size":1013,"mtime":1613289174603,"results":"32","hashOfConfig":"24"},{"size":683,"mtime":1612967803732,"results":"33","hashOfConfig":"24"},{"size":454,"mtime":1615376598964,"results":"34","hashOfConfig":"24"},{"size":2139,"mtime":1613641525807,"results":"35","hashOfConfig":"24"},{"size":5233,"mtime":1615563385234,"results":"36","hashOfConfig":"24"},{"size":2974,"mtime":1615433280560,"results":"37","hashOfConfig":"24"},{"size":11103,"mtime":1613314778336,"results":"38","hashOfConfig":"24"},{"size":2665,"mtime":1612918056970,"results":"39","hashOfConfig":"24"},{"size":3912,"mtime":1615344878404,"results":"40","hashOfConfig":"24"},{"size":14828,"mtime":1615564275752,"results":"41","hashOfConfig":"24"},{"size":16221,"mtime":1615565010780,"results":"42","hashOfConfig":"24"},{"size":3881,"mtime":1613370415303,"results":"43","hashOfConfig":"24"},{"size":3367,"mtime":1613190008817,"results":"44","hashOfConfig":"24"},{"size":2493,"mtime":1614143851503,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1qrquh3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\mehar\\github\\3-project\\client\\src\\index.js",[],["94","95"],"C:\\Users\\mehar\\github\\3-project\\client\\src\\App.js",["96"],"import React , { useState, useEffect } from 'react';\nimport './App.css';\nimport Tasks from './pages/Tasks/Tasks';\nimport Timesheet from './components/Timesheet/Timesheet';\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Landing from \"./pages/Landing/Landing\";\nimport Register from \"./components/Register/register\";\nimport Login from \"./components/Login/login\";\nimport Admin from './pages/Admin/Admin';\nimport Team from './pages/Team/Team';\nimport Auth from './Auth';\n\nimport { getOneUser, updatePassword } from './utils/apis/userFunctions';\nimport jwt_decode from 'jwt-decode';\nimport { Modal, Button } from 'react-bootstrap';\nimport { decode } from 'jsonwebtoken';\n\nfunction App() {\n\n    const history = useHistory();\n\n    // Managing state of modal that allows password to be reset\n    const [show, setShow] = useState(false);\n\n    // Managing state of modal that alerts user on successful password change\n    const [alertShow, setAlertShow] = useState(false);\n\n    // Manage state of errors\n    const [error, setError] = useState({\n        errors: {}\n    })\n    let token, decoded;\n    if (localStorage.usertoken) {\n        token = localStorage.usertoken;\n        decoded = jwt_decode(token);\n    }\n\n    const handleClose = event => { \n        \n        getOneUser(decoded).then(response => {\n            const newPwd = document.querySelector('.new-password').value.trim();\n            const confirmNewPwd = document.querySelector('.confirm-new-password').value.trim();\n\n            // Used for validation\n            let errors = {};\n            let formIsValid = true;\n\n            const updatePasswordData = {\n                _id: decoded._id,\n                newPwd: newPwd\n            };\n            // password\n            if (newPwd.length < 6) {\n                formIsValid = false;\n                errors[\"newPwd\"] = \"Password must be at least 6 characters\";\n            }\n\n            else if (confirmNewPwd !== newPwd) {\n                formIsValid = false;\n                errors[\"confirmNewPwd\"] = \"Password does not match the one above\"\n            }\n\n            else {}\n\n            setError({\n                errors: errors\n            });\n\n            if (formIsValid) {\n                // console.log(updatePasswordData);\n                updatePassword(updatePasswordData);\n                setShow(false);\n                \n                //Log user out\n                localStorage.removeItem('usertoken');\n                history.push('/login');\n                setAlertShow(true);\n            }\n        })\n    };\n\n    const handleShow = () => {\n        setShow(true)\n    }; \n\n    useEffect(() => {\n        document.getElementById('overlay').style.display = 'none';\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                <div className=\"container-fluid pl-0 pr-0 m-0\">\n                    <Navbar handleShowCB={handleShow}/>\n                    <Route exact path=\"/\" component={Landing} />\n                    <div className='container-fluid m-0 p-0'>\n                        <Route exact path=\"/demo/tasks\" render={(props) => <Tasks {...props} handleShowCB={handleShow} />} />\n                        <Route exact path=\"/demo/timesheet\" component={Timesheet} />\n                        <Route exact path=\"/demo/engagements\" component={Team} />\n                        <Route exact path=\"/tasks\" render={(props) => localStorage.getItem('usertoken') ? <Tasks {...props} handleShowCB={handleShow} /> : <Landing {...props} />}/>\n                        <Route exact path=\"/timesheet/:id\" component={Auth(Timesheet)}/>\n                        <Route exact path=\"/admin\" render={(props) => localStorage.getItem('usertoken') ? decoded.admin ? <Admin {...props} /> : <Redirect {...props} to=\"/tasks\" />  : <Redirect {...props} to=\"/\" /> } />\n                        <Route exact path=\"/engagements\" component={Auth(Team)} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n                    </div>\n                    {/* {localStorage.getItem('usertoken') ? <Redirect to=\"/tasks\" /> : <Redirect to=\"/\" />}  */}\n                </div>\n            </Switch>\n            <Modal\n                show={show}\n                onHide={() => setShow(false)}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title style={{color: '#1874cd'}}>Reset Password</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form>\n                        <label htmlFor='new-password'>New Password</label>\n                        <br></br>\n                        <input type=\"password\" className=\"new-password\"></input>\n                        <span style={{ color: \"red\" }}>{error.errors[\"newPwd\"]}</span>\n                        <br></br>\n                        <br></br>\n                        <label htmlFor='confirm-new-password'>Confirm Password</label>\n                        <br></br>\n                        <input type=\"password\" className=\"confirm-new-password\"></input>\n                        <span style={{ color: \"red\" }}>{error.errors[\"confirmNewPwd\"]}</span>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" style={{bgcolor: '#1874cd', color: 'white'}} onClick={handleClose}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Modal\n                show={alertShow}\n                onHide={() => setAlertShow(false)}\n                keyboard={false}>\n                <Modal.Header className=\"pwdChangeAlert\" closeButton><b>Password changed successfully!</b></Modal.Header>\n            </Modal>\n        </div>\n    )\n}\n\nexport default App;","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Timesheet\\Timesheet.js",["97"],"/* eslint-disable no-loop-func */\nimport React, { useEffect, useState } from 'react';\nimport API from '../../utils/apis/API';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './Timesheet.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Paper, FormControlLabel, Switch, Box, Button } from '@material-ui/core';\nimport EnhancedTableHead from './TableHead';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n        border: '1px solid #1874cd'\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    button: {\n        marginBottom: 40,\n        float: 'right'\n    }\n}));\n\nfunction Timesheet() {\n    const history = useHistory();\n\n    // ID of the users unique board is extracted from the location pathname\n    const { id } = useParams();\n\n    // MUI Table data\n    const [rows, setRows] = useState([]);\n\n    // Variables for MUI Table\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('desc');\n    const [orderBy, setOrderBy] = React.useState('cost');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    // Populate MUI Table\n    const renderTasks = () => {\n        const tempRowArr = [];\n\n        API.getUserBoard(id)\n        .then(res => {\n            // Loop through initial data to find out content & time of each task\n            // Add this data to table\n            for (let key in res.data.tasks) {\n\n                if (res.data.tasks.hasOwnProperty(key)) {\n                    if (key === 'task-1') {\n                        continue;\n                    } else {\n                        if (res.data.tasks[key].transferred === false) {\n                            const tempTimesheetArr = [];\n                            for (let timeKey in res.data.tasks[key].timesheet) {\n                                if (res.data.tasks[key].timesheet[timeKey] === 0) {\n                                    tempTimesheetArr.push(\"\");\n                                } else {\n                                    tempTimesheetArr.push(res.data.tasks[key].timesheet[timeKey]);\n                                }\n                            }\n                            tempRowArr.push(createData(res.data.tasks[key].content, ...tempTimesheetArr))\n                        }\n                    }\n                }\n            }\n            if (('transferredTasks') in res.data) {\n                for (let key in res.data.transferredTasks) {\n                    const tempTimesheetArr = [];\n                    for (let timeKey in res.data.transferredTasks[key].timesheet) {\n                        if (res.data.transferredTasks[key].timesheet[timeKey] === 0) {\n                            tempTimesheetArr.push(\"\");\n                        } else {\n                            tempTimesheetArr.push(res.data.transferredTasks[key].timesheet[timeKey]);\n                        }\n                    }\n                    tempRowArr.push(createData(res.data.transferredTasks[key].content, ...tempTimesheetArr));\n                }\n            }\n        })\n        .then(() => {\n            setRows(tempRowArr);\n        })\n    }\n\n    // Functions required for MUI Table\n    function createData(task, mon, tues, wed, thurs, fri, sat, sun) {\n        return { task, mon, tues, wed, thurs, fri, sat, sun };\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n        const newSelecteds = rows.map((n) => n.task);\n        setSelected(newSelecteds);\n        return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n            selected.slice(0, selectedIndex),\n            selected.slice(selectedIndex + 1),\n        );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const handleTaskBtnClick = () => {\n        if (localStorage.usertoken) {\n            history.push(\"/tasks\");\n        } else {\n            history.push(\"/demo/tasks\")\n        }\n    } \n\n    useEffect(() => {\n        if (localStorage.usertoken) {\n            renderTasks();\n        } else {\n            if (sessionStorage.traseDemo) {\n                const demo = JSON.parse(sessionStorage.getItem(\"traseDemo\"));\n                const tempRowArr = []\n                // Loop through initial data to find out content & time of each task\n                // Add this data to table\n                for (let key in demo.tasks) {\n                    if (demo.tasks.hasOwnProperty(key)) {\n                        if (key === 'task-1') {\n                            continue;\n                        } else {\n                            if (demo.tasks[key].transferred === false) {\n                                const tempTimesheetArr = [];\n                                for (let timeKey in demo.tasks[key].timesheet) {\n                                    if (demo.tasks[key].timesheet[timeKey] === 0) {\n                                        tempTimesheetArr.push(\"\");\n                                    } else {\n                                        tempTimesheetArr.push(demo.tasks[key].timesheet[timeKey]);\n                                    }\n                                }\n                                tempRowArr.push(createData(demo.tasks[key].content, ...tempTimesheetArr))\n                            }\n                        }\n                    }\n                    if (('transferredTasks') in demo) {\n                        for (let key in demo.transferredTasks) {\n                            const tempTimesheetArr = [];\n                            for (let timeKey in demo.transferredTasks[key].timesheet) {\n                                if (demo.transferredTasks[key].timesheet[timeKey] === 0) {\n                                    tempTimesheetArr.push(\"\");\n                                } else {\n                                    tempTimesheetArr.push(demo.transferredTasks[key].timesheet[timeKey]);\n                                }\n                            }\n                            tempRowArr.push(createData(demo.transferredTasks[key].content, ...tempTimesheetArr));\n                        }\n                    }\n                }\n                setRows(tempRowArr);\n            }\n        } \n    }, []);\n\n    return (\n        <div className=\"timesheet\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <h2 className=\"timesheet-heading\">Timesheet</h2>\n                        <br></br>\n                        <Paper className={classes.paper}>\n                            <TableContainer>\n                                <Table\n                                    className={classes.table}\n                                    aria-labelledby=\"tableTitle\"\n                                    size={dense ? 'small' : 'medium'}\n                                    aria-label=\"enhanced table\"\n                                >\n                                    <EnhancedTableHead\n                                        classes={classes}\n                                        numSelected={selected.length}\n                                        onSelectAllClick={handleSelectAllClick}\n                                        rowCount={rows.length}\n                                        order={order}\n                                        orderBy={orderBy}\n                                        onRequestSort={handleRequestSort}\n                                    />\n                                    <TableBody>\n                                    {stableSort(rows, getComparator(order, orderBy))\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                            .map((row, index) => {\n                                        const isItemSelected = isSelected(row.task);\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                                        return (\n                                            <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.task)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={index}\n                                            selected={isItemSelected}\n                                            >\n                                                <TableCell style={{fontWeight: 'bold'}} component=\"td\" id={labelId} scope=\"row\" align=\"left\">\n                                                    <Box pl={3}>\n                                                        {row.task}\n                                                    </Box>\n                                                </TableCell>\n                                                <TableCell align=\"center\">{row.mon}</TableCell>\n                                                <TableCell align=\"center\">{row.tues}</TableCell>\n                                                <TableCell align=\"center\">{row.wed}</TableCell>\n                                                <TableCell align=\"center\">{row.thurs}</TableCell>\n                                                <TableCell align=\"center\">{row.fri}</TableCell>\n                                                <TableCell align=\"center\">{row.sat}</TableCell>\n                                                <TableCell align=\"center\">{row.sun}</TableCell>\n                                            </TableRow>\n                                        );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                        <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                            />\n                        </Paper>\n                        <FormControlLabel\n                            control={<Switch checked={dense} onChange={handleChangeDense} />}\n                            label=\"Dense padding\"\n                        />\n                    </div>\n                </div>\n                <Button onClick={handleTaskBtnClick} className={classes.button} variant=\"contained\" color=\"primary\">Tasks</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Timesheet;","C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\ReactDND.js",["98"],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\initial-data.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\column.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\contexts\\UpdateToDoContext.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\ReactDND\\task.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\NewTaskAddBox\\NewTaskAddBox.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\apis\\API.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\Auth.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Landing\\Landing.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Login\\login.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Register\\register.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\utils\\apis\\userFunctions.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Tasks\\Tasks.js",["99"],"import React, { useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport ReactDND from '../../components/ReactDND/ReactDND';\nimport { updateLoginStatus } from '../../utils/apis/userFunctions';\nimport './Tasks.css';\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\n\nfunction Tasks(props) {\n\n    // const [state, setState] = useState({\n    //     teamName: '',\n    //     first_name: '',\n    //     last_name: '',\n    //     email: '',\n    //     password: '',\n    //     admin: '',\n    //     errors: {}\n    // })\n\n    const history = useHistory();\n    let token = null; \n    let decoded = null;\n\n    if (localStorage.usertoken) {\n        token = localStorage.usertoken;\n        decoded = jwt_decode(token);\n    }\n\n    const handleClick = () => {\n        if (decoded !== null) {\n            history.push('/timesheet/' + decoded._id);\n        } else {\n            history.push('/demo/timesheet')\n        }\n    };\n\n    const handleEngClick = () => {\n        history.push('/demo/engagements');\n    }\n    \n    useEffect(() => {\n        if (decoded !== null && decoded.firstLogin === true) {\n    \n            props.handleShowCB();\n    \n            updateLoginStatus(decoded._id);\n        }\n    }, []) \n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12\">\n                    {decoded === null ? (\n                        <div>\n                            <h1 className=\"loggedInUserName\">Jane Doe</h1>\n                            <br></br>\n                            <ReactDND userID={null} />\n                            <Button onClick={handleEngClick} className=\"engButton\" style={{marginBottom: 40, marginLeft: 10}} variant=\"contained\" color=\"primary\">Engagements</Button>\n                            <Button onClick={handleClick} className=\"timesheetButton\" style={{marginBottom: 40}} variant=\"contained\" color=\"primary\">Timesheet</Button>\n                            <div>\n                                <h4 className=\"instructions\"><i>Instructions</i></h4>\n                                <h5>Time a Task</h5>\n                                <ol>\n                                    <li>Add a task by clicking on the + icon in the 'To Do' column</li>\n                                    <li>Drag the task into the 'In Progress' column to start time monitoring</li>\n                                    <li>Drag this task into the 'Paused' or 'Done' columns to stop time monitoring</li>\n                                    <li>Click on the 'Timesheet' button</li>\n                                </ol>\n                                <h5>Assign Task to an Engagement</h5>\n                                <ol>\n                                    <li>Click on the coral button that is shown on the top right of each task</li>\n                                    <li>Click the 'Assign' option, select an engagement, then click 'Assign'</li>\n                                    <li><b>Task must be timed for its cost to be shown on the engagements page</b></li>\n                                    <li>Click on the 'Engagements' button</li>\n                                </ol>\n                            </div>\n                        </div>\n                    ): (\n                        <div>\n                            <h1 className=\"loggedInUserName\">\n                                { decoded.first_name } { decoded.last_name }\n                            </h1>\n                            <br></br>\n                            <ReactDND userID={ decoded._id } />\n                            <Button onClick={handleClick} className=\"timesheetButton\" style={{marginBottom: 40}} variant=\"contained\" color=\"primary\">Timesheet</Button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    ) \n}\n\nexport default Tasks;","C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Admin\\Admin.js",["100","101","102","103","104","105","106"],"C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\Team.js",["107","108","109"],"C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\engagementPDF.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\pages\\Team\\TableHead.js",[],"C:\\Users\\mehar\\github\\3-project\\client\\src\\components\\Timesheet\\TableHead.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":18,"column":10,"nodeType":"116","messageId":"117","endLine":18,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":238,"column":8,"nodeType":"120","endLine":238,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":94,"column":6,"nodeType":"120","endLine":94,"endColumn":8,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"124","line":49,"column":8,"nodeType":"120","endLine":49,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":38,"column":35,"nodeType":"128","messageId":"129","endLine":38,"endColumn":36,"suggestions":"130"},{"ruleId":"126","severity":1,"message":"127","line":38,"column":54,"nodeType":"128","messageId":"129","endLine":38,"endColumn":55,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":119,"column":54,"nodeType":"134","messageId":"135","endLine":119,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":169,"column":57,"nodeType":"134","messageId":"135","endLine":169,"endColumn":59},{"ruleId":"126","severity":1,"message":"127","line":196,"column":35,"nodeType":"128","messageId":"129","endLine":196,"endColumn":36,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"127","line":196,"column":54,"nodeType":"128","messageId":"129","endLine":196,"endColumn":55,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"133","line":213,"column":54,"nodeType":"134","messageId":"135","endLine":213,"endColumn":56},{"ruleId":"132","severity":1,"message":"138","line":104,"column":55,"nodeType":"134","messageId":"139","endLine":104,"endColumn":57},{"ruleId":"132","severity":1,"message":"138","line":264,"column":51,"nodeType":"134","messageId":"139","endLine":264,"endColumn":53},{"ruleId":"118","severity":1,"message":"140","line":277,"column":8,"nodeType":"120","endLine":277,"endColumn":10,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'decode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderTasks'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has missing dependencies: 'decoded.email', 'decoded.teamName', and 'props.userID'. Either include them or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'decoded' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["146"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["147","148"],["149","150"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["151","152"],["153","154"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'decoded', 'storeEngagementNames', and 'tempEngArr'. Either include them or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"messageId":"162","fix":"163","desc":"164"},{"messageId":"165","fix":"166","desc":"167"},{"messageId":"162","fix":"168","desc":"164"},{"messageId":"165","fix":"169","desc":"167"},{"messageId":"162","fix":"170","desc":"164"},{"messageId":"165","fix":"171","desc":"167"},{"messageId":"162","fix":"172","desc":"164"},{"messageId":"165","fix":"173","desc":"167"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [renderTasks]",{"range":"176","text":"177"},"Update the dependencies array to be: [decoded.email, decoded.teamName, props.userID]",{"range":"178","text":"179"},"Update the dependencies array to be: [decoded, props]",{"range":"180","text":"181"},"removeEscape",{"range":"182","text":"183"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"184","text":"185"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"186","text":"183"},{"range":"187","text":"185"},{"range":"188","text":"183"},{"range":"189","text":"185"},{"range":"190","text":"183"},{"range":"191","text":"185"},"Update the dependencies array to be: [decoded, storeEngagementNames, tempEngArr]",{"range":"192","text":"193"},[8649,8651],"[renderTasks]",[2619,2621],"[decoded.email, decoded.teamName, props.userID]",[1246,1248],"[decoded, props]",[1096,1097],"",[1096,1096],"\\",[1115,1116],[1115,1115],[6176,6177],[6176,6176],[6195,6196],[6195,6195],[8758,8760],"[decoded, storeEngagementNames, tempEngArr]"]